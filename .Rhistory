getMixpanelSessions2 <- function(startDate, endDate, token, platform){
jql <- paste0(
"https://",
token,
"@mixpanel.com/api/2.0/jql?script=",
"var%20params%20%3D%20%7B%0A%20%20from%3A%20%27",
startDate,
"%27%2C%0A%20%20to%3A%20%27",
endDate,
"%27%2C%0A%20%20timeout%3A%2030*60*1000%2C%0A%20%20h24%3A%201000*60*60*24%2C%0A%7D%3B%0Afunction%20main()%20%7B%0A%20%20return%20Events(%7B%0A%20%20%20%20from_date%3A%20params.from%2C%0A%20%20%20%20to_date%3A%20params.to%0A%20%20%7D)%0A%20%20.filter(event%20%3D%3E%20event.properties.platform%20%3D%3D%3D%20%22",
platform,
"%22)%0A%20%20.filter(event%20%3D%3E%20event.properties.event_type%20%3D%3D%3D%20%22pv%22)%0A%20%20.groupByUser(%5Bevent%20%3D%3E%20getDay(event.time)%5D%2C%20function(state%2C%20events)%7B%0A%20%20%20%20state%20%3D%20state%20%7C%7C%20%7Bpv%3A%200%2C%20sessions%3A%200%2C%20bounces%3A%200%2C%20pvPerSession%3A%200%2C%20dateSession%3A%20null%2C%20previousEvent%3A0%2C%20totaltime%3A0%20%7D%3B",
"_.each(events%2C%20function(e%2C%20i)%7B%0A%20%20%20%20%20%20if%20(e.properties.event_type%20%3D%3D%3D%20%27pv%27)%7B%0A%20%20%20%20%20%20%20%20state.pv%2B%2B%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(e.time%20-%20state.previousEvent%20%3E%3D%20params.timeout)%7B%0A%20%20%20%20%20%20%20%20state.sessions%2B%2B%3B%0A%20%20%20%20%20%20%20%20if%20(state.pvPerSession%20%3D%3D%3D%201)%7B%0A%20%20%20%20%20%20%20%20%20%20state.bounces%2B%2B%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20state.dateSession%20%3D%20getDay(e.time)%3B%0A%20%20%20%20%20%20%20%20state.pvPerSession%20%3D%201%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20state.totaltime%2B%3D(e.time-state.previousEvent)%3B%0A%20%20%20%20%20%20%20%20state.pvPerSession%2B%2B%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.pvPerSession%20%3D%3D%3D%201%20%26%26%20(i%2B1)%20%3D%3D%3D%20events.length)%7B%0A%20%20%20%20%20%20%20%20%20%20state.bounces%2B%2B%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.previousEvent%20%3D%20e.time%3B%0A%20%20%20%20%7D)%3B",
"state.pvPerSession%3D0%3B%0A%20%20%20%20state.dateSession%3D0%3B%0A%20%20%20%20state.previousEvent%3D0%3B%0A%20%20%20%20return%20state%3B%0A%7D)",
".map(function(item)%7B%0A%20%20var%20obj%20%3D%20%7B%0A%20%20%20%20pv%3A%20%7B%7D%2C%0A%20%20%20%20sessions%3A%20%7B%7D%2C%0A%20%20%20%20bounces%3A%20%7B%7D%2C%0A%20%20%20%20totaltime%3A%20%7B%7D%0A%20%20%7D%3B%0A%20%20obj.date%20%3D%20item.key%5B1%5D%3B%0A%20%20obj.pv%20%3D%20Number(item.value.pv)%3B%0A%20%20obj.sessions%20%3D%20Number(item.value.sessions)%3B%0A%20%20obj.bounces%20%3D%20Number(item.value.bounces)%3B%0A%20%20obj.totaltime%20%3D%20Number(item.value.totaltime)%2F1000%3B%0A%20%20%20%20return%20obj%3B%0A%7D)",
".groupBy(%5Bfunction(item)%20%7B%0A%20%20var%20date%20%3D%20item.date%3B%0A%20%20delete%20item.date%3B%0A%20%20return%20date%3B%0A%7D%5D%2C%20mixpanel.reducer.object_merge())%3B%0A%7D%0Afunction%20makeDays(to%2C%20from)%20%7B%0A%20%20var%20obj%20%3D%20%7B%7D%3B%0A%20%20var%20start%20%3D%20new%20Date(from)%3B%0A%20%20var%20end%20%3D%20new%20Date(new%20Date(to).getTime()%20%2B%2060%20*%2060%20*%2024%20*%201000)%3B%0A%20%20var%20current%20%3D%20start%3B%0A%20%20var%20seconds%20%3D%201000%20*%2060%20*%2060%20*%2024%3B%0A%20%20while(current%20%3C%20end)%20%7B%0A%20%20%20%20obj%5Bcurrent.toISOString().substring(0%2C10)%5D%20%3D%200%3B%0A%20%20%20%20current%20%3D%20new%20Date(current.getTime()%20%2B%20seconds)%3B%0A%20%20%7D%0A%20%20return%20obj%3B%0A%7D%0Afunction%20getDay(unix)%20%7B%0A%20%20return%20new%20Date(unix).toISOString().substring(0%2C10)%3B%0A%7D"
)
jql
}
start <- '2017-06-01'
end <- '2017-06-30'
vertical <- 'autovit' # otodom,storia,otomoto,autovit,standvirtual,imovirtual
countryCode <- 'RO' # PL,UA,PT,RO
#concatenate
verticalAndCountryCode <- paste0(vertical,countryCode)
# dates
start <- '2017-06-01'
end <- '2017-06-30'
yyyymm <- '201706'
startDetailed <- '2017-06-01 00:00:00'
endDetailed <- '2017-06-31 23:59:59'
# other info
aticredentials <- "jeremy.castan%40olx.com:Cavenaghi-33"
# sites table
sitesReference <- data.frame(
site = c('otodomPL','storiaRO','otodomUA','imovirtualPT','otomotoPL','autovitRO','standvirtualPT'),
mpToken = c('f11909a90782f605aef692025f648546','d317a9cc40cd231587ce92b443f2ca44','118c44417c41ac2b4efae9a09423e875','1103d4986633d8967760948cac3002ca','ed06fd545816f0ef5c79f4936e603870','79e6da126de6456734165fa9fc1dc98a','4b51dbcc5f322d07f0ac40ea490813b8'),
atiSiteId = c(574115,574998,575222,580689,574113,574114,579542),
takeMonth = c(1,1,1,1,1,1,1),
city = c('Warsaw','Bucharest','Kiev','Lisbon','Warsaw','Bucharest','Lisbon'),
utc = c(7200,10800,10800,3600,7200,10800,3600),
atiAdPageName = c('adpage','adpage','adpage','adpage','ad_page','ad_page','ad_page'),
atiPostingFormPageName = c('posting_form','posting_form','posting_form','posting_form','posting%20form','posting%20form','posting%20form')
)
# then choose the corresponding id & timestamp
token <- as.character(sitesReference$mpToken[sitesReference$site == verticalAndCountryCode])
siteid <- as.integer(sitesReference$atiSiteId[sitesReference$site == verticalAndCountryCode])
shouldWeCallMonthly <- as.integer(sitesReference$takeMonth[sitesReference$site == verticalAndCountryCode])
tsStart <- transformDate(startDetailed, location = sitesReference$city[sitesReference$site == verticalAndCountryCode]) - sitesReference$utc[sitesReference$site == verticalAndCountryCode]
tsEnd <- transformDate(endDetailed, location = sitesReference$city[sitesReference$site == verticalAndCountryCode]) - sitesReference$utc[sitesReference$site == verticalAndCountryCode]
### TIME TO QUERY AND CREATE THE METRICS ###
getMixpanelSessions2(startDate = start, endDate = end, token = token, platform = 'desktop')
setwd("~/Documents/GitHub/multipayusecase")
library(jsonlite)
fromJSON('data.json')
coucou <- fromJSON('data.json')
View(coucou)
install.packages('googleVis')
library(googleVis)
df <- fromJSON('data.json')
View(df)
df[df$didConvert == 1,]
priceChangeConvYes <- df[df$didConvert == 1,]
priceChangeConvYes <- df[df$didConvert == 0,]
df <- fromJSON('data.json')
priceChangeConvYes <- df[df$didConvert == 0,]
priceChangeConvYes <- df[df$didConvert == 1,]
chart <- gvisScatterChart(priceChangeConvYes,options=list(title="Customizing points"))
priceChangeConvYes <- df[df$didConvert == 1,c('total','max')]
View(priceChangeConvYes)
chart <- gvisScatterChart(priceChangeConvYes,options=list(title="Customizing points"))
plot(chart)
priceChangeConvYes <- df[df$didConvert == 1,c('priceChanges','total')]
chart <- gvisScatterChart(priceChangeConvYes,options=list(title="Customizing points"))
plot(chart)
priceChangeConvYes <- df[df$didConvert == 0,c('priceChanges','total')]
chart <- gvisScatterChart(priceChangeConvYes,options=list(title="Customizing points"))
plot(chart)
Pie <- gvisPieChart(df$didConvert)
convertTotal <- df[,c('didConvert','total')]
Pie <- gvisPieChart(df$convertTotal)
?gvisPieChart
Pie <- gvisPieChart(convertTotal)
plot(Pie)
convertTotal$didConvert[convertTotal$didConvert=1] <- 'converted'
convertTotal$didConvert[convertTotal$didConvert=0] <- 'not converted'
convertTotal$didConvert[convertTotal$didConvert==1] <- 'converted'
convertTotal$didConvert[convertTotal$didConvert==0] <- 'not converted'
Pie <- gvisPieChart(convertTotal)
plot(Pie)
coucou <- c('a','b','c')
coucou2 <- c(40,20,11)
coucou3 <- data.frame(
lettre = c('a','b','c'),
qty = c(40,20,11)
)
Pie <- gvisPieChart(coucou3)
plot(Pie)
